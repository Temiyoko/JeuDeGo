Index: src/go/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/go/Player.java b/src/player/Player.java
rename from src/go/Player.java
rename to src/player/Player.java
--- a/src/go/Player.java	(revision 026b2263c0db63518d408ca30155de462038c416)
+++ b/src/player/Player.java	(date 1704300012765)
@@ -1,9 +1,12 @@
-package go;
+package player;
+
+import go.Stones;
+import ihm.IPlayer;
 
 import java.util.List;
 import java.util.ArrayList;
 
-public class Player {
+public class Player implements IPlayer {
     private Stones stoneColor;
     private int score;
     private List<String> moveHistory;
Index: src/ihm/JeuDeGo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ihm;\r\n\r\nimport go.Stones;\r\nimport go.Goban;\r\nimport go.Player;\r\n\r\nimport java.util.*;\r\n\r\n\r\npublic class JeuDeGo {\r\n    private static Goban goban;\r\n    private static Player blackP, whiteP;\r\n    public static void main(String[] args) {\r\n        initializeGame();\r\n        Player lastPlayer = whiteP;\r\n\r\n        Scanner sc = new Scanner(System.in);\r\n\r\n        while(sc.hasNextLine()) {\r\n            String input = sc.nextLine().trim();\r\n            String[] arguments = input.split(\"\\\\s+\");\r\n\r\n            String id, cmd;\r\n            String[] arg;\r\n\r\n            if(isInt(arguments[0])){\r\n                id = arguments[0];\r\n                cmd = arguments[1];\r\n                arg = Arrays.copyOfRange(arguments, 2, arguments.length);\r\n            }\r\n            else{\r\n                id = \"\";\r\n                cmd = arguments[0];\r\n                arg = Arrays.copyOfRange(arguments, 1, arguments.length);\r\n            }\r\n            switch (cmd) {\r\n                case \"quit\":\r\n                    System.out.println(\"=\" + id);\r\n                    return;\r\n                case \"boardsize\":\r\n                    boardsize(arg, id);\r\n                    break;\r\n                case \"showboard\":\r\n                    showboard(id);\r\n                    break;\r\n                case \"clear_board\":\r\n                    resetGame(goban.getSize());\r\n                    System.out.println(\"=\" + id);\r\n                    break;\r\n                case \"play\":\r\n                    lastPlayer = play(arg, id, lastPlayer);\r\n                    if (lastPlayer == null) {\r\n                        return;\r\n                    }\r\n                    break;\r\n                default:\r\n                    System.out.println(\"?\" + id + \" unknown command\");\r\n                    break;\r\n            }\r\n        }\r\n        sc.close();\r\n    }\r\n\r\n    private static void initializeGame() {\r\n        goban = new Goban();\r\n        blackP = new Player(Stones.BLACK);\r\n        whiteP = new Player(Stones.WHITE);\r\n    }\r\n\r\n    private static void showboard(String id) {\r\n        System.out.println(\"=\" + id);\r\n        System.out.println(goban.show(blackP, whiteP));\r\n    }\r\n\r\n    private static int[] convert(String s){ //A1\r\n        char c = s.toUpperCase().charAt(0);\r\n        if (c == 'I') {\r\n            throw new IllegalArgumentException();\r\n        }\r\n        int col = c > 'I' ? (int) c - 'A' - 1 : (int) c - 'A';\r\n        int ligne = Integer.parseInt(s.substring(1)) - 1;\r\n        return new int[]{col,  ligne};\r\n    }\r\n\r\n    private static Player play(String[] arg, String id, Player lastPlayer) {\r\n        try {\r\n            if (!arg[0].equalsIgnoreCase(\"white\") && !arg[0].equalsIgnoreCase(\"black\")) {\r\n                throw new IllegalArgumentException();\r\n            }\r\n            Player p = arg[0].equalsIgnoreCase(\"black\") ? blackP : whiteP;\r\n\r\n            if(p == lastPlayer){\r\n                throw new RuntimeException();\r\n            }\r\n\r\n            if (arg[1].equalsIgnoreCase(\"pass\")) {\r\n\r\n                if (p.getLastMove().equalsIgnoreCase(\"pass\")){\r\n                    System.out.println(\"=\" + id + \" resigns\");\r\n                    return null;\r\n                }\r\n\r\n                p.addMove(arg[1]);\r\n                System.out.println(\"=\" + id);\r\n                return p;\r\n            }\r\n\r\n            int[] coord = convert(arg[1]);\r\n            if (!goban.isInBoard(coord)) {\r\n                throw new IllegalArgumentException();\r\n            }\r\n            else if (!goban.isPlayable(coord) || isSuicide(coord)) {\r\n                throw new RuntimeException();\r\n            }\r\n\r\n            Stones color = (p == blackP) ? Stones.BLACK : Stones.WHITE;\r\n\r\n            p.addMove(arg[1]);\r\n            goban.setStone(coord, color);\r\n\r\n            p.setScore(p.getScore() + goban.captureStones(coord));\r\n\r\n            System.out.println(\"=\" + id);\r\n            return p;\r\n\r\n        } catch (IllegalArgumentException | ArrayIndexOutOfBoundsException e) {\r\n            System.out.println(\"?\" + id + \" invalid color or coordinate\");\r\n        } catch (RuntimeException e) {\r\n            System.out.println(\"?\" + id + \" illegal move\");\r\n        }\r\n        return lastPlayer;\r\n    }\r\n\r\n    private static boolean isSuicide(int[] position) {\r\n        return goban.getLiberties(position) == 0;\r\n    }\r\n\r\n    private static void boardsize(String[] args, String id) {\r\n        try {\r\n            int nb = Integer.parseInt(args[0]);\r\n\r\n            if(nb < goban.getMinSize() || nb > goban.getMaxSize()){\r\n                System.out.println(\"?\" + id + \" unacceptable size\");\r\n                return;\r\n            }\r\n\r\n            resetGame(nb);\r\n            System.out.println(\"=\" + id);\r\n        }\r\n        catch (ArrayIndexOutOfBoundsException e){\r\n            System.out.println(\"?\" + id + \" boardsize not an integer\");\r\n        }\r\n        catch (NumberFormatException e) {\r\n            System.out.println(\"?\" + id + \" unknown command\");\r\n        }\r\n    }\r\n\r\n    private static void resetGame(int nb) {\r\n        assert nb >= goban.getMinSize() && nb <= goban.getMaxSize();\r\n\r\n        goban = new Goban(nb);\r\n        blackP.reset();\r\n        whiteP.reset();\r\n    }\r\n\r\n    private static boolean isInt(String s){\r\n        try{\r\n            Integer.parseInt(s);\r\n            return true;\r\n        } catch (NumberFormatException e) {\r\n            return false;\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/ihm/JeuDeGo.java b/src/ihm/JeuDeGo.java
--- a/src/ihm/JeuDeGo.java	(revision 026b2263c0db63518d408ca30155de462038c416)
+++ b/src/ihm/JeuDeGo.java	(date 1704300012771)
@@ -2,17 +2,16 @@
 
 import go.Stones;
 import go.Goban;
-import go.Player;
 
 import java.util.*;
 
 
 public class JeuDeGo {
     private static Goban goban;
-    private static Player blackP, whiteP;
+    private static IPlayer blackP, whiteP;
     public static void main(String[] args) {
         initializeGame();
-        Player lastPlayer = whiteP;
+        IPlayer lastPlayer = whiteP;
 
         Scanner sc = new Scanner(System.in);
 
@@ -82,12 +81,12 @@
         return new int[]{col,  ligne};
     }
 
-    private static Player play(String[] arg, String id, Player lastPlayer) {
+    private static IPlayer play(String[] arg, String id, IPlayer lastPlayer) {
         try {
             if (!arg[0].equalsIgnoreCase("white") && !arg[0].equalsIgnoreCase("black")) {
                 throw new IllegalArgumentException();
             }
-            Player p = arg[0].equalsIgnoreCase("black") ? blackP : whiteP;
+            IPlayer p = arg[0].equalsIgnoreCase("black") ? blackP : whiteP;
 
             if(p == lastPlayer){
                 throw new RuntimeException();
Index: src/go/Goban.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package go;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Goban {\r\n    private static final int MINSIZE = 1, MAXSIZE = 19;\r\n    private int size;\r\n    private Stones[][] stones;\r\n\r\n    public Goban(){\r\n        this.size = MAXSIZE;\r\n        this.stones = new Stones[MAXSIZE][MAXSIZE];\r\n    }\r\n\r\n    public Goban(int n){\r\n        assert n >= MINSIZE && n <= MAXSIZE;\r\n        this.size = n;\r\n        this.stones = new Stones[n][n];\r\n    }\r\n\r\n    public int getSize(){\r\n        return size;\r\n    }\r\n\r\n    public int getMinSize(){\r\n        return MINSIZE;\r\n    }\r\n\r\n    public int getMaxSize(){\r\n        return MAXSIZE;\r\n    }\r\n\r\n    public void setStone(int[] tab, Stones s) {\r\n        stones[tab[1]][tab[0]] = s;\r\n    }\r\n\r\n    public boolean isInBoard(int[] tab){\r\n        return tab[0] >= 0 && tab[0] < size && tab[1] >= 0 && tab[1] < size;\r\n    }\r\n\r\n    public boolean isPlayable(int[] tab){\r\n        return stones[tab[1]][tab[0]] == null;\r\n    }\r\n\r\n    public int getLiberties(int[] position) {\r\n        int liberties = 0;\r\n\r\n        for (int[] adjPos : getAdjacentPositions(position)) {\r\n            if (isPlayable(adjPos)) {\r\n                ++liberties;\r\n            }\r\n        }\r\n        return liberties;\r\n    }\r\n\r\n    public List<int[]> getAdjacentPositions(int[] position) { //[A,9] (0,8) A - 1 (-1)\r\n        List<int[]> adjacentPositions = new ArrayList<>();\r\n\r\n        int[][] directions = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};\r\n        for (int[] dir : directions) {\r\n            int newX = position[0] + dir[0];//a verifier\r\n            int newY = position[1] + dir[1];\r\n            if (isInBoard(new int[]{newX, newY})) {// a verifier\r\n                adjacentPositions.add(new int[]{newX, newY});\r\n            }\r\n        }\r\n        return adjacentPositions;\r\n    }\r\n\r\n    public int captureStones(int[] position) {\r\n        int cpt = 0;\r\n        for (int[] adjPos : getAdjacentPositions(position)) {\r\n            if (isPlayable(position)) {\r\n                int stoneLiberties = getLiberties(adjPos);\r\n                if (stoneLiberties == 0) {\r\n                    setStone(adjPos, null);\r\n                    cpt++;\r\n                }\r\n            }\r\n        }\r\n        return cpt;\r\n    }\r\n\r\n    public String show(Player p1, Player p2) {\r\n        StringBuilder sb = new StringBuilder(\"   \");\r\n        int cpt = size;\r\n\r\n        letters(sb);\r\n        sb.append(System.lineSeparator());\r\n\r\n        for (int i = size - 1 ; i >= 0 ; --i){\r\n            sb.append(cpt < 10 ? \" \" + cpt : cpt).append(\" \");\r\n\r\n            for (int j = 0 ; j < size ; ++j){\r\n                Stones st = stones[i][j];\r\n                sb.append(st == null ? \". \" : st == Stones.BLACK ? \"X \" : \"O \");\r\n            }\r\n\r\n            sb.append(cpt < 10 ? \" \" + cpt : cpt);\r\n            sb.append(cpt == 2 ? \"     \" + p2.toString() : cpt == 1 ? \"     \" + p1.toString() : \"\");\r\n\r\n            sb.append(System.lineSeparator());\r\n            --cpt;\r\n        }\r\n\r\n        sb.append(\"   \");\r\n        letters(sb);\r\n\r\n        return sb.toString();\r\n    }\r\n\r\n    private void letters(StringBuilder sb) {\r\n        for (int i = 0; i < size; ++i) {\r\n            char c = (char)('A' + i);\r\n            sb.append(c >= 'I' ? (char)(c + 1) : c).append(\" \");\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/go/Goban.java b/src/go/Goban.java
--- a/src/go/Goban.java	(revision 026b2263c0db63518d408ca30155de462038c416)
+++ b/src/go/Goban.java	(date 1704299870642)
@@ -1,5 +1,7 @@
 package go;
 
+import player.Player;
+
 import java.util.ArrayList;
 import java.util.List;
 
Index: src/ihm/IPlayer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/ihm/IPlayer.java b/src/ihm/IPlayer.java
new file mode 100644
--- /dev/null	(date 1704301396872)
+++ b/src/ihm/IPlayer.java	(date 1704301396872)
@@ -0,0 +1,14 @@
+package ihm;
+
+public interface IPlayer {
+    IPlayer play();
+    public void addMove(String move);
+
+    public int getScore();
+
+    public void setScore(int score);
+
+    public void reset();
+
+    public String getLastMove();
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"3d91ec27-cc2e-442d-ad90-c0d4a67c50e3\" name=\"Changes\" comment=\"Minor changes\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitToolBoxStore\">\r\n    <option name=\"projectConfigVersion\" value=\"5\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 2\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2YRcAbZcYvHZ3GRjuiwnYpJEv0b\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n    <option name=\"showMembers\" value=\"true\" />\r\n    <option name=\"showVisibilityIcons\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;Application.JeuDeGo.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;F:/Documents/Cours/BUT2/Periode B/Quali dev/JeuDeGo&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-17.0.9-corretto-17.0.9-f644763e9732-ebaef533\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"3d91ec27-cc2e-442d-ad90-c0d4a67c50e3\" name=\"Changes\" comment=\"\" />\r\n      <created>1700491693659</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1700491693659</updated>\r\n      <workItem from=\"1700491695388\" duration=\"2789000\" />\r\n      <workItem from=\"1700513269062\" duration=\"308000\" />\r\n      <workItem from=\"1700566258443\" duration=\"2321000\" />\r\n      <workItem from=\"1700571663772\" duration=\"3810000\" />\r\n      <workItem from=\"1700771234740\" duration=\"1970000\" />\r\n      <workItem from=\"1700773241060\" duration=\"3114000\" />\r\n      <workItem from=\"1700776406119\" duration=\"922000\" />\r\n      <workItem from=\"1700815808165\" duration=\"3440000\" />\r\n      <workItem from=\"1700827085642\" duration=\"40000\" />\r\n      <workItem from=\"1700827134845\" duration=\"150000\" />\r\n      <workItem from=\"1700827299716\" duration=\"1201000\" />\r\n      <workItem from=\"1701100548734\" duration=\"10000\" />\r\n      <workItem from=\"1701176302453\" duration=\"2538000\" />\r\n      <workItem from=\"1701180295399\" duration=\"641000\" />\r\n      <workItem from=\"1701436027769\" duration=\"5000\" />\r\n      <workItem from=\"1701782135250\" duration=\"814000\" />\r\n      <workItem from=\"1701783023148\" duration=\"6112000\" />\r\n      <workItem from=\"1701854573996\" duration=\"235000\" />\r\n      <workItem from=\"1703526924400\" duration=\"434000\" />\r\n      <workItem from=\"1703672787164\" duration=\"617000\" />\r\n      <workItem from=\"1703673427321\" duration=\"35000\" />\r\n      <workItem from=\"1703673473959\" duration=\"412000\" />\r\n      <workItem from=\"1703674040475\" duration=\"269000\" />\r\n      <workItem from=\"1703674339417\" duration=\"64000\" />\r\n      <workItem from=\"1703674404384\" duration=\"3663000\" />\r\n      <workItem from=\"1703884326202\" duration=\"80000\" />\r\n      <workItem from=\"1704278072166\" duration=\"7464000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Initial commit\">\r\n      <created>1700491729525</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700491729525</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Initial commit\">\r\n      <created>1700491740280</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700491740280</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Coded boardsize\">\r\n      <created>1700501101664</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700501101664</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Coded boardsize\">\r\n      <created>1700501119814</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700501119814</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Updated structure and coded showboard\">\r\n      <created>1700577007684</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700577007684</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Finish showboard + updated Player\">\r\n      <created>1700777327183</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700777327183</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Finish showboard + updated Player\">\r\n      <created>1700815847777</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700815847777</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Handled numbers before command\">\r\n      <created>1700823904012</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700823904012</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Finished first sprint\">\r\n      <created>1701176689785</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701176689785</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Coded clear_board\">\r\n      <created>1701782905290</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701782905290</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Small changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703674482101</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703674482101</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Finished Play method\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703704617785</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703704617785</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Updated play method + main\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703876973300</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703876973300</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Updated play method\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703877003794</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703877003794</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"Updated play method\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703883659541</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703883659541</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"Minor changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704278332968</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704278332968</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"Minor changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704278596647</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704278596647</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"Minor changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704279556279</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704279556279</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Minor changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704282948073</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704282948073</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"Minor changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704282970315</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704282970315</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"Minor changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704284955988</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704284955988</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"Minor changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704290061031</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704290061031</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"Minor changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704290304364</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704290304364</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"Minor changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704290761352</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704290761352</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"25\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"Initial commit\" />\r\n    <MESSAGE value=\"Coded boardsize\" />\r\n    <MESSAGE value=\"Updated structure and coded showboard\" />\r\n    <MESSAGE value=\"Finish showboard + updated Player\" />\r\n    <MESSAGE value=\"Handled numbers before command\" />\r\n    <MESSAGE value=\"Finished first sprint\" />\r\n    <MESSAGE value=\"Coded clear_board\" />\r\n    <MESSAGE value=\"Small changes\" />\r\n    <MESSAGE value=\"Finished Play method\" />\r\n    <MESSAGE value=\"Updated play method + main\" />\r\n    <MESSAGE value=\"Updated play method\" />\r\n    <MESSAGE value=\"Minor changes\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Minor changes\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 026b2263c0db63518d408ca30155de462038c416)
+++ b/.idea/workspace.xml	(date 1704300012832)
@@ -4,7 +4,18 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="3d91ec27-cc2e-442d-ad90-c0d4a67c50e3" name="Changes" comment="Minor changes" />
+    <list default="true" id="3d91ec27-cc2e-442d-ad90-c0d4a67c50e3" name="Changes" comment="Minor changes">
+      <change afterPath="$PROJECT_DIR$/src/ihm/IPlayer.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/player/RandomPlayer.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_03_01_2024_15_10__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_03_01_2024_15_10__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/JeuDeGo/go/Goban.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/JeuDeGo/go/Goban.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/JeuDeGo/go/Player.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/JeuDeGo/go/Player.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/JeuDeGo/ihm/JeuDeGo.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/JeuDeGo/ihm/JeuDeGo.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/go/Goban.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/go/Goban.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/go/Player.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/player/Player.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/ihm/JeuDeGo.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/ihm/JeuDeGo.java" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -13,6 +24,7 @@
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
       <list>
+        <option value="Interface" />
         <option value="Class" />
       </list>
     </option>
Index: src/player/RandomPlayer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/player/RandomPlayer.java b/src/player/RandomPlayer.java
new file mode 100644
--- /dev/null	(date 1704301551969)
+++ b/src/player/RandomPlayer.java	(date 1704301551969)
@@ -0,0 +1,68 @@
+package player;
+
+import ihm.IPlayer;
+
+public class RandomPlayer implements IPlayer {
+    @Override
+    public IPlayer play() {
+        return null;
+    }
+
+    // Méthode pour générer un coup aléatoire valide
+    public int[] generateRandomMove() {
+        List<int[]> emptyIntersections = new ArrayList<>();
+
+        // Recherche des intersections vides
+        for (int i = 0; i < size; i++) {
+            for (int j = 0; j < size; j++) {
+                if (board[i][j] == 0) {
+                    int[] intersection = {i, j};
+                    emptyIntersections.add(intersection);
+                }
+            }
+        }
+
+        // Sélection aléatoire d'une intersection vide non suicidaire
+        Random random = new Random();
+        while (!emptyIntersections.isEmpty()) {
+            int index = random.nextInt(emptyIntersections.size());
+            int[] move = emptyIntersections.get(index);
+            int x = move[0];
+            int y = move[1];
+
+            // Vérification si le coup est suicidaire
+            if (!isSuicide(x, y, 1) || !isSuicide(x, y, 2)) {
+                return move; // Renvoie le coup valide
+            } else {
+                emptyIntersections.remove(index); // Supprime l'intersection suicidaire de la liste
+            }
+        }
+
+        return null; // Aucun coup valide trouvé
+    }
+
+    @Override
+    public void addMove(String move) {
+
+    }
+
+    @Override
+    public int getScore() {
+        return 0;
+    }
+
+    @Override
+    public void setScore(int score) {
+
+    }
+
+    @Override
+    public void reset() {
+
+    }
+
+    @Override
+    public String getLastMove() {
+        return null;
+    }
+}
