Index: src/ihm/JeuDeGo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ihm;\r\n\r\nimport go.Stones;\r\nimport go.Goban;\r\nimport player.AI;\r\nimport player.Human;\r\nimport go.IPlayer;\r\n\r\nimport java.util.*;\r\n\r\n\r\npublic class JeuDeGo {\r\n    private static Goban goban;\r\n    private static IPlayer blackP, whiteP;\r\n    private static IPlayer lastPlayer, currentPlayer;\r\n    private static boolean isAITurn;\r\n\r\n    public static void main(String[] args) {\r\n        initializeGame(args);\r\n\r\n        Scanner sc = new Scanner(System.in);\r\n\r\n        while(true) {\r\n            String input;\r\n            String[] arguments = new String[]{\"play\", currentPlayer == blackP ? \"black\" : \"white\", \"a1\"};\r\n\r\n            if (!isAITurn) {\r\n                input = sc.nextLine().trim();\r\n                arguments = input.split(\"\\\\s+\");\r\n            }\r\n\r\n            String id, cmd;\r\n            String[] arg;\r\n\r\n            if(isInt(arguments[0])){\r\n                id = arguments[0];\r\n                cmd = arguments[1];\r\n                arg = Arrays.copyOfRange(arguments, 2, arguments.length);\r\n            }\r\n            else{\r\n                id = \"\";\r\n                cmd = arguments[0];\r\n                arg = Arrays.copyOfRange(arguments, 1, arguments.length);\r\n            }\r\n\r\n            switch (cmd) {\r\n                case \"quit\":\r\n                    System.out.println(\"=\" + id);\r\n                    sc.close();\r\n                    return;\r\n                case \"boardsize\":\r\n                    boardsize(arg, id);\r\n                    break;\r\n                case \"showboard\":\r\n                    showboard(id);\r\n                    break;\r\n                case \"clear_board\":\r\n                    resetGame(goban.getSize());\r\n                    System.out.println(\"=\" + id);\r\n                    break;\r\n                case \"play\":\r\n                    lastPlayer = play(arg, id, lastPlayer);\r\n                    if (lastPlayer == null) {\r\n                        sc.close();\r\n                        return;\r\n                    }\r\n\r\n                    currentPlayer = lastPlayer == whiteP ? blackP : whiteP;\r\n                    isAITurn = currentPlayer.getClass() == AI.class;\r\n\r\n                    showboard(id);\r\n                    break;\r\n                default:\r\n                    System.out.println(\"?\" + id + \" unknown command\");\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private static void initializeGame(String[] args) {\r\n        assert isInt(args[0]);\r\n        int nbAI = Integer.parseInt(args[0]);\r\n\r\n        blackP = nbAI == 2 ? new AI(Stones.BLACK) : new Human(Stones.BLACK);\r\n        whiteP = nbAI == 0 ? new Human(Stones.WHITE) : new AI(Stones.WHITE);\r\n        goban = new Goban(blackP, whiteP);\r\n\r\n        lastPlayer = whiteP;\r\n        currentPlayer = blackP;\r\n        isAITurn = nbAI == 2;\r\n\r\n        boardsize(new String[]{\"6\"}, \"\");\r\n    }\r\n\r\n    private static void showboard(String id) {\r\n        System.out.println(\"=\" + id);\r\n        System.out.println(goban.show(blackP, whiteP));\r\n    }\r\n\r\n    private static int[] convert(String s){\r\n        if(s.equalsIgnoreCase(\"pass\")){\r\n            return new int[]{-1, -1};\r\n        }\r\n\r\n        char c = s.toUpperCase().charAt(0);\r\n        if (c == 'I') {\r\n            throw new IllegalArgumentException();\r\n        }\r\n        int col = c > 'I' ? (int) c - 'A' - 1 : (int) c - 'A';\r\n        int ligne = Integer.parseInt(s.substring(1)) - 1;\r\n        return new int[]{col,  ligne};\r\n    }\r\n\r\n    public static IPlayer play(String[] arg, String id, IPlayer lastP){\r\n        try {\r\n            if (!arg[0].equalsIgnoreCase(\"white\") && !arg[0].equalsIgnoreCase(\"black\")) {\r\n                throw new IllegalArgumentException();\r\n            }\r\n            IPlayer p = arg[0].equalsIgnoreCase(\"black\") ? blackP : whiteP;\r\n\r\n            if(p == lastP){\r\n                throw new RuntimeException();\r\n            }\r\n\r\n            if(!p.play(convert(arg[1]), goban)){\r\n                System.out.println(\"=\" + id + \" resigns\");\r\n                return null;\r\n            }\r\n            System.out.println(\"=\" + id);\r\n            return p;\r\n\r\n        } catch (IllegalArgumentException | ArrayIndexOutOfBoundsException e) {\r\n            System.out.println(\"?\" + id + \" invalid color or coordinate\");\r\n        } catch (RuntimeException e) {\r\n            System.out.println(\"?\" + id + \" illegal move\");\r\n        }\r\n        return lastP;\r\n    }\r\n\r\n    private static void boardsize(String[] args, String id) {\r\n        try {\r\n            int nb = Integer.parseInt(args[0]);\r\n\r\n            if(nb < goban.getMinSize() || nb > goban.getMaxSize()){\r\n                System.out.println(\"?\" + id + \" unacceptable size\");\r\n                return;\r\n            }\r\n\r\n            resetGame(nb);\r\n            System.out.println(\"=\" + id);\r\n        }\r\n        catch (ArrayIndexOutOfBoundsException e){\r\n            System.out.println(\"?\" + id + \" boardsize not an integer\");\r\n        }\r\n        catch (NumberFormatException e) {\r\n            System.out.println(\"?\" + id + \" unknown command\");\r\n        }\r\n    }\r\n\r\n    private static void resetGame(int nb) {\r\n        assert nb >= goban.getMinSize() && nb <= goban.getMaxSize();\r\n\r\n        blackP.reset();\r\n        whiteP.reset();\r\n        goban = new Goban(nb, blackP, whiteP);\r\n\r\n        lastPlayer = whiteP;\r\n        currentPlayer = blackP;\r\n    }\r\n\r\n    private static boolean isInt(String s){\r\n        try{\r\n            Integer.parseInt(s);\r\n            return true;\r\n        } catch (NumberFormatException e) {\r\n            return false;\r\n        }\r\n    }\r\n}
===================================================================
diff --git a/src/ihm/JeuDeGo.java b/src/ihm/JeuDeGo.java
--- a/src/ihm/JeuDeGo.java	
+++ b/src/ihm/JeuDeGo.java	
@@ -89,7 +89,7 @@
         currentPlayer = blackP;
         isAITurn = nbAI == 2;
 
-        boardsize(new String[]{"6"}, "");
+        boardsize(new String[]{"3"}, "");
     }
 
     private static void showboard(String id) {
